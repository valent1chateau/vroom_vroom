/* 
 * $Id$
 * 
 * Copyright (c) 2011-17 Stephane GALLAND <stephane.galland@utbm.fr>.
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 * This program is free software; you can redistribute it and/or modify
 */
package traffic_simulation.environment

import java.util.UUID

import traffic_simulation.time.TimeManager
import java.util.TreeMap
import org.eclipse.xtend.lib.annotations.Accessors

/**
 * Situated environment.  
 * 
 * @author St&eacute;phane GALLAND &lt;stephane.galland@utbm.fr&gt;
 * @version $Name$ $Revision$ $Date$
 */
class Environment {
	var agentsToSpawn : int
	
	// Bodies
	@Accessors
	var bodyList : TreeMap<UUID, classicDriverBody>
	@Accessors
	var priorityVehicle : priorityVehicleBody
	@Accessors
	var map : Map
	
	new() {
		bodyList = new TreeMap<UUID, classicDriverBody>
		priorityVehicle = new priorityVehicleBody()
		map = new Map(1600,900)
	}
	def Update() {
		var a = bodyList.values
		//println(a.get(0).c)
		for(entry : bodyList.entrySet()){
			println(bodyList.get(entry.getKey()).speed)
			bodyList.get(entry.getKey()).accelerate(0.5)
			//println(bodyList.get(entry.getKey()).c)
			}
	}
	
	def initEnvironment(agents:int){
		agentsToSpawn = agents
		var i = 0 
		var currentV: classicDriverBody
		while (i < agentsToSpawn - 1){
			currentV = new classicDriverBody(this.map)
			bodyList.put(currentV.ID,currentV)
			i++
		}
	}
}