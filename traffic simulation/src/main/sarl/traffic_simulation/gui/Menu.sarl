package traffic_simulation.gui

import traffic_simulation.environment.Window2
import traffic_simulation.environment.EnvironmentAgent
import traffic_simulation.environment.Environment
import javafx.application.Application;
import javafx.application.Platform;
import javafx.geometry.Insets;
import javafx.scene.Node
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.stage.Stage;
import javafx.scene.text.*;

import javafx.^event.ActionEvent
import javafx.^event.EventHandler
import io.sarl.bootstrap.SRE

// Classe qui va gérer la fenetre de menu ainsi que tout les objets se trouvant
// à l'intérieur de cette fenetre
class Menu extends Application {
	var buttonPlay : Button
	var buttonExit : Button
	var win : Window2
	var env : Environment
	var labelnbAgent : Label
	var labelDimFen : Label
	var labelAccel : Label
	var labelUnitAccel : Label
	var labelFeu : Label
	var labelUnitTemps : Label
	var nbAgentText : TextField
	var nbHautFen : TextField
	var nbLargFen : TextField
	var nbAccel : TextField
	var nbTempsFeu : TextField
	var nbAgent : int
	var LongueurFenetre : int
	var HauteurFenetre : int
	var nbAcceleration : double
	var nbTempsFeuRouge : int

	// Création des différents objets
	new() {

		buttonPlay = new Button(" ▶ ")
		buttonPlay.setOnAction(new EventHandler<ActionEvent> {

			def handle(e : ActionEvent) {

				nbAgent = Integer.parseInt(nbAgentText.getText())
				LongueurFenetre = Integer.parseInt(nbLargFen.getText())
				HauteurFenetre = Integer.parseInt(nbHautFen.getText())
				nbAcceleration = Double.parseDouble(nbAccel.getText())
				nbTempsFeuRouge = Integer.parseInt(nbTempsFeu.getText())
				env = new Environment(LongueurFenetre, HauteurFenetre, nbAgent, nbAcceleration, nbTempsFeuRouge)
				win = new Window2(env, LongueurFenetre, HauteurFenetre)
				win.show()

				var boot = SRE.getBootstrap
				boot.startAgent(typeof(EnvironmentAgent), env)
			}
		})
		buttonPlay.setStyle("-fx-font: 22 arial; -fx-base: #8AFC88; -fx-text-fill : white")

		buttonExit = new Button("✖")
		buttonExit.setOnAction(new EventHandler<ActionEvent> {
			def handle(e : ActionEvent) {
				Platform.exit()
			}
		})
		buttonExit.setStyle("-fx-font: 22 arial; -fx-base: #C55252; -fx-text-fill : white")

		labelnbAgent = new Label("Nombre d'agent normaux:")
		nbAgentText = new TextField()
		nbAgentText.setText("30")
		nbAgentText.setPrefColumnCount(2)

		labelDimFen = new Label("Dimension de la fenetre:")

		nbHautFen = new TextField()
		nbHautFen.setText("800")
		nbHautFen.setPrefColumnCount(3)
		nbLargFen = new TextField()
		nbLargFen.setText("1200")
		nbLargFen.setPrefColumnCount(3)

		labelAccel = new Label("Accelération du véhicule:")
		nbAccel = new TextField()
		nbAccel.setText("4")
		nbAccel.setPrefColumnCount(3)
		labelUnitAccel = new Label("m/s^-2")
		
		labelFeu = new Label("Temps feu rouge:")
		nbTempsFeu = new TextField()
		nbTempsFeu.setText("10")
		nbTempsFeu.setPrefColumnCount(3)
		labelUnitTemps = new Label("s")
	}
	
	//	Permet le placement des différents objets créés
	//	La fonction s'occupe également du titre, de la taille et du lancement
	//	de la fenetre
	def start(primaryStage : Stage) throws Exception {

		var root : GridPane
		var scene : Scene

		root = new GridPane()
		root.setHgap(10)
		root.setVgap(10)
		root.setPadding(new Insets(10, 10, 10, 10))

		root.add(labelnbAgent, 0, 0)
		root.add(nbAgentText, 1, 0)
		root.add(labelDimFen, 0, 1)
		root.add(nbLargFen, 1, 1)
		root.add(nbHautFen, 2, 1)
		root.add(labelAccel, 0, 2)
		root.add(nbAccel, 1, 2)
		root.add(labelUnitAccel, 2, 2)
		root.add(labelFeu, 0, 3)
		root.add(nbTempsFeu, 1, 3)
		root.add(labelUnitTemps, 2, 3)
		root.add(buttonPlay, 0, 4)
		root.add(buttonExit, 1, 4)

		primaryStage.setTitle("Menu - Traffic simulation")

		scene = new Scene(root, 400, 250)
		primaryStage.setScene(scene)
		primaryStage.show()
	}

}
