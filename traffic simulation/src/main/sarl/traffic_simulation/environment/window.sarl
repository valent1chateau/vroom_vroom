/** 
 * 
 */
package traffic_simulation.environment

import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.*;
import javafx.scene.paint.Color;
import javafx.scene.shape.Polyline;
import javafx.scene.control.*;
import javafx.stage.Stage;
import javafx.scene.Group;
import javafx.scene.shape.Circle

import io.sarl.core.Initialize
import io.sarl.core.Lifecycle
import io.sarl.core.Logging
import io.sarl.core.DefaultContextInteractions
import java.util.ArrayList

/** 
 * @author jeome
 * 
 */
class window extends Application {
	var map : Map
	var length : double
	var width : double

	new() {
		super()

		this.length = 800
		this.width = 600
		map = new Map(this.length, this.width)
		var p : Path = new Path()
		p.Astar(map.getG, map.getG.getListNodes.get(4), map.getG.getListNodes.get(6))
		var d : ArrayList<Node> = p.pathNodes
		var e : ArrayList<Edge> = p.pathEdges
		for (var i = 0; i < d.size; i++) {
			println(d.get(i).id)
		}

		for (var j = 0; j < e.size; j++) {
			println(e)
			println(e.get(j).getNin.id + " - "+ e.get(j).getNout.id)
		}
		
		//print(map.getG.getListNodes.get(11).coord )
		//print(map.getG.dict_Edges.get("1911").weight)
		// p.Astar(map.getG, map.getG.getListNodes.get(4), map.getG.getListNodes.get(10))
		// println(map.poly().get(0))
		// println(map.poly().get(1))
		// println(map.poly().get(2))
	}

	def start(primaryStage : Stage) { // throws Exception {
		primaryStage.setTitle("window")
		
		// points
		var points : double[] = #[0.0d, 20.0d, 40.0d, 240.0d, 60.0d, 180.0d, 80.0d, 200.0d, 100.0d, 90.0d]

		// create a polyline
		var polyline = new Polyline(points);

		// create a Group
		var group = new Group(map.poly());
		// var group = new Group(polyline);
		// create a scene
		
		for (var i = 0; i < map.getG.getListNodes.size();i++){
			var c : Circle = new Circle()
			c.setCenterX(map.getG.getListNodes.get(i).coord.getX())
			c.setCenterY(map.getG.getListNodes.get(i).coord.getY())
			c.setRadius(this.width*0.01)
			group.getChildren().add(c)
		}
		var scene = new Scene(group, this.length, this.width);

		// set the scene
		primaryStage.setScene(scene);

		primaryStage.show();

		// throw new UnsupportedOperationException("TODO: auto-generated method stub")
	}

	def show() {
		launch
	}

}

agent Agenttest {
	uses Logging, Lifecycle, DefaultContextInteractions

	on Initialize {
		loggingName = "Agent - 1"
		info("I'm starting")

		var win : window = new window()
		win.show
		killMe
	}
}
