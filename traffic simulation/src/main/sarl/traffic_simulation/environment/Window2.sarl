/** 
 * 
 */
package traffic_simulation.environment

import com.sun.javafx.application.LauncherImpl
import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.*;
import javafx.scene.paint.Color;
import javafx.scene.shape.Polyline;
import javafx.scene.control.*;
import javafx.stage.Stage;
import javafx.scene.Group;
import javafx.scene.shape.Circle

import io.sarl.core.Initialize
import io.sarl.core.Lifecycle
import io.sarl.core.Logging
import io.sarl.core.DefaultContextInteractions
import java.util.ArrayList
import javafx.animation.AnimationTimer
import java.util.TreeMap
import java.util.UUID

//class de l'interface grapphique principale de notre simulation
class Window2 extends Stage {
	var env : Environment		//prend en paramètre l'environment
	var length : int
	var width : int
	var group : Group
	
	var drivers = new TreeMap<UUID, classicDriverBody>
	new(e : Environment, h : int, w : int) {
		
		this.length = h
		this.width = w
		
		env = e
		drivers = env.bodyList
		this.setTitle("simulation")
		
		// create a Group
		 group = new Group(env.map.poly()); //ajout des polylines de l'environment
		
		//ajout des cercles représentant les feux de circulations
		for (var l = 0; l < env.trafficlight_lst.size(); l++) {
			var tf = env.trafficlight_lst.get(l)
			var c : Circle = new Circle()
			c.setCenterX(tf.coord.getX())
			c.setCenterY(tf.coord.getY())
			c.setRadius(width * 0.01)
			if (tf.isGreen) {
				c.setFill(Color.GREEN)
			} else {
				c.setFill(Color.RED)
			}
			group.getChildren().add(c)
		}
		
		
		//boucle de l'animation 
		var boucle : AnimationTimer = new AnimationTimer() {

			def handle(now : long) {
				
				drivers = env.bodyList
				group.getChildren().clear()
				
				//ajout des polylines = routes
				for (var j = 0; j < env.map.poly().size; j++) {
					group.getChildren().add(env.map.poly().get(j))
				}
				
				//ajout des fuex de circulations
				for (var l = 0; l < env.trafficlight_lst.size();l++){
					var tf = env.trafficlight_lst.get(l)
					var c : Circle = new Circle()
					c.setCenterX(tf.coord.getX())
					c.setCenterY(tf.coord.getY())
					c.setRadius(width * 0.01)
					if (tf.isGreen) {
						c.setFill(Color.GREEN)
					} else {
						c.setFill(Color.RED)
					}
					group.getChildren().add(c)
				}
				
				//ajout des véhicules représenter par des ronds
				for (entry : drivers.entrySet()) {
					group.getChildren().add(drivers.get(entry.getKey()).c)
				}
			}
			
		}
		boucle.start()
		var scene = new Scene(group, this.length, this.width);

		// set the scene
		this.setScene(scene);

		
		
		
	}
	
}
